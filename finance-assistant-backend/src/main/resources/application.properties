spring.application.name=finance-assistant-backend

spring.datasource.url=jdbc:postgresql://localhost:5432/finance_db
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

server.port=8080
app.cors.allowed-origins=http://127.0.0.1:3000,http://127.0.0.1:3001,http://localhost:3000,http://localhost:3001
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
app.cors.allowed-headers=Authorization,Content-Type,Accept

# JWT Configuration
jwt.secret=${JWT_SECRET_KEY}
jwt.expiration=3600000

# Hugging Face Configuration for AI-powered insights
# Using a verified working text generation model
huggingface.api.key=${HUGGINGFACE_API_KEY}
huggingface.model=facebook/bart-large-mnli,gpt2
huggingface.max-length=256
huggingface.timeout=30
huggingface.base.url=https://api-inference.huggingface.co



# Async Configuration
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=10
spring.task.execution.pool.queue-capacity=25

# Google Gemini Configuration for AI-powered insights
gemini.api.key=${GEMINI_API_KEY}
gemini.model=gemini-1.5-flash
gemini.max-tokens=2048
gemini.temperature=0.7
gemini.top-p=0.9
gemini.top-k=40
gemini.timeout=60



# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB